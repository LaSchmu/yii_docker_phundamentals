before_script:
  - export APP_MIGRATION_LOOKUP=@root/tests/codeception/_migrations
  - export BUILD_PREFIX=buildref${CI_BUILD_REF}$(echo ${CI_BUILD_REF_NAME} | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')
  - export COMPOSE_PROJECT_NAME=${BUILD_PREFIX}
  - export COMPOSE_HTTP_TIMEOUT=120
  - export HOST_APP_VOLUME=$CI_PROJECT_DIR
  - export TEST_IMAGE_PREFIX=${BUILD_PREFIX}
  - mkdir -p tmp

stages:
  - build
  - test_pre
  - test
  - report
  - cleanup
  - deploy

build:
  stage: build
  script:
      - cp .env-dist .env
      - make build
      - make TEST clean

test:
  stage: test
  script:
      - export COMPOSE_PROJECT_NAME=${BUILD_PREFIX}${CI_BUILD_NAME}
      - set +e
      - bash build/scripts/${CI_BUILD_NAME}.sh || EXIT_CODE=$?
      - set -e
      - cp -r tests/codeception/_output/ /tmp/${CI_BUILD_NAME}-${CI_BUILD_REF}
      - exit ${EXIT_CODE}

test-allow_failure:
  stage: test_pre
  script:
      - export COMPOSE_PROJECT_NAME=${BUILD_PREFIX}${CI_BUILD_NAME}
      - set +e
      - bash build/scripts/${CI_BUILD_NAME}.sh || EXIT_CODE=$?
      - set -e
      - cp -r tests/codeception/_output/ /tmp/${CI_BUILD_NAME}-${CI_BUILD_REF}
      - exit ${EXIT_CODE}
  allow_failure: true
  only:
      - develop

lint:
  stage: test_pre
  script:
      - make diagnose
      - bash build/scripts/lint.sh
  allow_failure: true

report:
  stage: report
  script:
    - ls -lat /tmp
  artifacts:
    paths:
      - /tmp/test-${CI_BUILD_REF}
      - /tmp/test-allow_failure-${CI_BUILD_REF}
  when: always

cleanup:
  stage: cleanup
  script:
    - make TEST clean
    - export COMPOSE_PROJECT_NAME="${BUILD_PREFIX}test"
    - make TEST clean
    - export COMPOSE_PROJECT_NAME="${BUILD_PREFIX}test-allow_failure"
    - make TEST clean
    - rm -rf /tmp/test-${CI_BUILD_REF}
    - rm -rf /tmp/test-allow_failure-${CI_BUILD_REF}
  when: always

deploy:
  stage: deploy
  script:
      - bash build/scripts/deploy.sh
  only:
      - master
